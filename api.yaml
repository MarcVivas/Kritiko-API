openapi: 3.0.3
info:
  title: Kritiko
  description: |-
    Kritiko is a web platform that allows users to rate and review various forms of media including movies, TV shows, books, video games, and anime.
  version: 1.0.11

paths:

          
                
  /user:
    get:
      tags:
        - user
      summary: Get the logged user 
      description: ''
      operationId: getLoggedUser

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
        '401':
          description: Requires authentication
        '404':
          description: User not found
  
  /auth/login:
    post:
      tags:
        - auth
      summary: Logs user into the system
      description: ''
      operationId: loginUser

      requestBody:
        description: Login data
        content:
          application/json:
            schema:
              type: object
              properties:
                username: 
                  type: string
                  example: 'bob@gmail.com'
                  description: Username or email
                password:
                  type: string
                  example: superLongPassword
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'          
        '403':
          description: Invalid username/password supplied
        '404':
          description: User not found
        '422':
          description: Validation error
  
  /auth/logout:
    get:
      tags:
        - auth
      summary: Logs out current logged in user session
      description: 'Only client! The client deletes the token from his requests and lets the token expire.'
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation      
  
  /auth/refresh:
    post:
      tags:
        - auth
      summary: Refresh the authentication token
      description: ''
      operationId: refreshToken
      requestBody:
        description: Data
        content:
          application/json:
            schema: 
              type: object
              properties:
                refreshToken:
                  type: string
                  example: 34242342342342342
          
      responses:
        '200':
          description: 'Token refreshed'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 324lo4j23o4h23jh4k2j3h4
        
  
  /auth/register:
    post:
      tags:
        - auth
      summary: Create user
      description: Create a new user.
      operationId: createUser
      requestBody:
        description: User data
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: bobby
                email:
                  type: string
                  example: bob@gmail.com
                password:
                  type: string
                  example: superLongPassword

      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'          

        '403':
          description: The user already exists.
      
        '422':
          description: Data validation error

  /media:
    get:
      tags:
        - media
      summary: Get all your reviewed media
      description: Get all your reviewed media
      responses:
        '200':
          description: Media returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Media'          

                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: http://127.0.0.1:8000/media?page=4
                      last:
                        type: string
                        example: http://127.0.0.1:8000/media?page=13
                      prev:
                        type: string
                        example: http://127.0.0.1:8000/media?page=3
                      next:
                        type: string
                        example: http://127.0.0.1:8000/media?page=5
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 3
                      from:
                        type: integer
                        example: 2
                      last_page:
                        type: integer
                        example: 13
                      links:
                        type: array
                        items:
                          type: object
                          properties:

                            url:
                              type: string
                              example: http://127.0.0.1:8000/media?page=3
                            label:
                              type: integer
                              example: 3
                            active:
                              type: boolean
                              example: true
                  path:
                    type: string
                    example: http://127.0.0.1:8000/media
                  per_page:
                    type: integer
                    example: 10
                  to:
                    type: integer
                    example: 4
                  total:
                    type: integer
                    example: 130

        '401':
          description: Requires authentication
    
      

components:
  schemas:
    Token:
      type: object
      properties:
        token:
          type: string
          example: 32432l4j23l4hl234h23kj4k32
        refreshToken:
          type: string
          example: 3424230423411341qeerw3412312312321

    User:
      type: object
      properties:
        _id:
          type: string
          example: d423042342304230jal
        username:
          type: string
          example: theUser
        email:
          type: string
          example: john@email.com
    Media:
      type: object
      properties:
        _id:
          type: string
          example: d423042342304230jal
        title:
          type: string
          example: Toy story 3
        avgScore:
          type: number
          example: 4.324
        thumbnail:
          type: string
          example: adakjdaksdhkasjd.xcinm
        description:
          type: string
          example: Living toys movie
        mediaType: 
          type: integer
          example: 3
        releaseDate:
          type: string
          example: '23-3-01'
        
          
        
          

   
 